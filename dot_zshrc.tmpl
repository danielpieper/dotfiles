# Start configuration added by Zim install {{"{{{"}}
#
# User configuration sourced by interactive shells
#

# -----------------
# Zsh configuration
# -----------------

#
# History
#

# Remove older command from the history if a duplicate is to be added.
setopt HIST_IGNORE_ALL_DUPS

#
# Input/output
#

# Set editor default keymap to emacs (`-e`) or vi (`-v`)
bindkey -v

# Prompt for spelling correction of commands.
#setopt CORRECT

# Customize spelling correction prompt.
#SPROMPT='zsh: correct %F{red}%R%f to %F{green}%r%f [nyae]? '

# Remove path separator from WORDCHARS.
WORDCHARS=${WORDCHARS//[\/]}


# --------------------
# Module configuration
# --------------------

#
# completion
#

# Set a custom path for the completion dump file.
# If none is provided, the default ${ZDOTDIR:-${HOME}}/.zcompdump is used.
#zstyle ':zim:completion' dumpfile "${ZDOTDIR:-${HOME}}/.zcompdump-${ZSH_VERSION}"

#
# git
#

# Set a custom prefix for the generated aliases. The default prefix is 'G'.
#zstyle ':zim:git' aliases-prefix 'g'

#
# input
#

# Append `../` to your input for each `.` you type after an initial `..`
#zstyle ':zim:input' double-dot-expand yes

#
# termtitle
#

# Set a custom terminal title format using prompt expansion escape sequences.
# See http://zsh.sourceforge.net/Doc/Release/Prompt-Expansion.html#Simple-Prompt-Escapes
# If none is provided, the default '%n@%m: %~' is used.
#zstyle ':zim:termtitle' format '%1~'

#
# zsh-autosuggestions
#

# Customize the style that the suggestions are shown with.
# See https://github.com/zsh-users/zsh-autosuggestions/blob/master/README.md#suggestion-highlight-style
#ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=10'

#
# zsh-syntax-highlighting
#

# Set what highlighters will be used.
# See https://github.com/zsh-users/zsh-syntax-highlighting/blob/master/docs/highlighters.md
ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets)

# Customize the main highlighter styles.
# See https://github.com/zsh-users/zsh-syntax-highlighting/blob/master/docs/highlighters/main.md#how-to-tweak-it
#typeset -A ZSH_HIGHLIGHT_STYLES
#ZSH_HIGHLIGHT_STYLES[comment]='fg=10'

# ------------------
# Initialize modules
# ------------------

if [[ ${ZIM_HOME}/init.zsh -ot ${ZDOTDIR:-${HOME}}/.zimrc ]]; then
  # Update static initialization script if it's outdated, before sourcing it
  source ${ZIM_HOME}/zimfw.zsh init -q
fi
source ${ZIM_HOME}/init.zsh

# ------------------------------
# Post-init module configuration
# ------------------------------

#
# zsh-history-substring-search
#

# Bind ^[[A/^[[B manually so up/down works both before and after zle-line-init
bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down

# Bind up and down keys
zmodload -F zsh/terminfo +p:terminfo
if [[ -n ${terminfo[kcuu1]} && -n ${terminfo[kcud1]} ]]; then
  bindkey ${terminfo[kcuu1]} history-substring-search-up
  bindkey ${terminfo[kcud1]} history-substring-search-down
fi

bindkey '^P' history-substring-search-up
bindkey '^N' history-substring-search-down
bindkey -M vicmd 'k' history-substring-search-up
bindkey -M vicmd 'j' history-substring-search-down
# {{"}}}"}} End configuration added by Zim install

{{- if eq .chezmoi.hostname "Daniels-MacBook-Pro" }}
# Secrets
export GITLAB_URL={{ (onepassword "weypmxevbpo6kfczdruhux5qcy").overview.url }}
export GITLAB_TOKEN={{ (first (first (onepassword "weypmxevbpo6kfczdruhux5qcy").details.sections).fields).v }}
{{- end }}

{{- if eq .chezmoi.hostname "falcon9" }}
# Secrets
export GITHUB_TOKEN={{ (index (first (onepassword "ieyxgbj5yvg5zombgcxkze56gy").details.sections).fields 1).v }}
{{- end }}

export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8
export LC_CTYPE=UTF-8
export GPG_TTY=`tty`


export EDITOR='nvim'
export VISUAL='nvim'
export PAGER='less'
export BROWSER='firefox'

export PATH=$PATH:~/.composer/vendor/bin:~/.local/bin:~/go/bin:~/.gem/ruby/2.6.0/bin

{{- if eq .chezmoi.os "darwin" }}
export PATH="/usr/local/opt/node@8/bin:/usr/local/sbin:$PATH"
alias pc="~/projects/personio/perctl"
alias wl="nvim ~/projects/private/personio/worklog.md"
{{- end }}

{{- if eq .chezmoi.os "linux" }}
source /usr/share/nvm/init-nvm.sh
{{- end }}

# Docker
alias dc="docker-compose"
alias dm="docker-machine"
alias de="docker exec -it"
alias d="docker"
alias kc="kubectl"

# kitty ssh
alias ssh="kitty +kitten ssh"

# Unix
alias ln='ln -v'
alias mkdir='mkdir -p'
alias l='ls'
alias ll='ls -lah'
if [[ -x "$(command -v exa)" ]]
then
  alias ls="exa"
  alias l="exa"
  alias ll="exa -lah --git --group-directories-first"
fi

alias vi="nvim"
alias vim="nvim"

alias xmm="xmodmap ~/.Xmodmap"

alias ap="ansible-playbook"
alias tf="terraform"
if [[ -x "$(command -v bat)" ]]
then
  alias cat="bat"
fi

if [[ -x "$(command -v hcloud)" ]]
then
  source <(hcloud completion zsh)
fi
if [[ -x "$(command -v kubectl)" ]]
then
  source <(kubectl completion zsh)
fi
if [[ -x "$(command -v jira)" ]]
then
  source <(jira --completion-script-zsh)
fi

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
[ -f ~/.tmuxinator.zsh ] && source ~/.tmuxinator.zsh

if [[ -x "$(command -v jenv)" ]]
then
  export PATH="$HOME/.jenv/bin:$PATH"
  eval "$(jenv init -)"
fi
if [[ -x "$(command -v chezmoi)" ]]
then
  alias cm="chezmoi"
  source <(chezmoi completion zsh)
fi
